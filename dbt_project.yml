# dbt_project.yml

name: 'ipl_analytics'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'ipl_analytics_profile' # Match this with your profiles.yml

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won\\'t need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:
  # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  ipl_analytics:
    # Applies to all models in the project
    staging:
      # Applies to models in models/staging/
      +materialized: view # Staging models often views for simplicity
      ipl_data:
        +schema: staging # Example: Build staging models in 'staging' schema
    intermediate:
      # Applies to models in models/intermediate/
      +materialized: table # Intermediate models often tables for performance
      dims:
        +schema: intermediate
      facts:
        +schema: intermediate
      agg:
        +schema: intermediate
    marts:
      # Applies to models in models/marts/
      +materialized: table # Marts are typically tables
      core:
        +schema: marts # Example: Build marts in 'marts' schema

# You might need to install dbt_utils if using generate_surrogate_key
# Add this to a packages.yml file and run `dbt deps`:
# packages:
#   - package: dbt-labs/dbt_utils
#     version: 1.0.0 # Or latest compatible version

